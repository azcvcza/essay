

"Q":"Doctype作用？严格模式与混杂模式如何区分？它们有何意义?",
"A":"http://www.cnblogs.com/youxin/p/3345100.html",

"Q":"HTML5为什么只需要写<!DOCTYPE HTML>?？",
"A":"tml5不基于SGML,因此不需要对DTD进行引用，但是需要doctype来规范浏览器的行为（让浏览器按照他们应该的方式来运行）而HTML4.01基于SGML，所以需要对DTD进行引用，才能告知浏览器文档所使用的文档类型。"

"Q":"行内元素有哪些？块级元素有哪些？ 空(void)元素有那些？",
"A":".关于行内元素和块状元素的说明,根据CSS规范的规定，每一个网页元素都有一个display属性，用于确定该元素的类型，每一个元素都有默认的display属性值，比如div元素，它的默认display属性值为“block”，成为“块级”元素(block-level)；而span元素的默认display属性值为“inline”，称为“行内”元素。div这样的块级元素，就会自动占据一定矩形空间，可以通过设置高度、宽度、内外边距等属性，来调整的这个矩形的样子；与之相反，像“span”“a”这样的行内元素，则没有自己的独立空间，它是依附于其他块级元素存在的，因此，对行内元素设置高度、宽度、内外边距等属性，都是无效的。2.行内、块状元素区别：
(1).块级元素会独占一行，其宽度自动填满其父元素宽度
     行内元素不会独占一行，相邻的行内元素会排列在同一行里，知道一行排不下，才会换行，其宽度随元素的内容而变化
(2). 一般情况下，块级元素可以设置 width, height属性，行内元素设置width,  height无效
      (注意：块级元素即使设置了宽度，仍然是独占一行的)
(3).块级元素可以设置margin 和 padding.  行内元素的水平方向的padding-left,padding-right,margin-left,margin-right 都产生边距效果，但是竖直方向的padding-top,padding-bottom,margin-top,margin-bottom都不会产生边距效果。（水平方向有效，竖直方向无效）

3.行内、块状元素：
块元素(block element)

　　* address - 地址
　　* blockquote - 块引用
　　* center - 举中对齐块
　　* dir - 目录列表
　　* div - 常用块级容易，也是css layout的主要标签
　　* dl - 定义列表
　　* fieldset - form控制组
　　* form - 交互表单
　　* h1 - 大标题
　　* h2 - 副标题
　　* h3 - 3级标题
　　* h4 - 4级标题
　　* h5 - 5级标题
　　* h6 - 6级标题
　　* hr - 水平分隔线
　　* isindex - input prompt
　　* menu - 菜单列表
　　* noframes - frames可选内容，（对于不支持frame的浏览器显示此区块内容
　　* noscript - 可选脚本内容（对于不支持script的浏览器显示此内容）
　　* ol - 排序表单
　　* p - 段落
　　* pre - 格式化文本
　　* table - 表格
　　* ul - 非排序列表

内联元素(inline element)

　　* a - 锚点
　　* abbr - 缩写
　　* acronym - 首字
　　* b - 粗体(不推荐)
　　* bdo - bidi override
　　* big - 大字体
　　* br - 换行
　　* cite - 引用
　　* code - 计算机代码(在引用源码的时候需要)
　　* dfn - 定义字段
　　* em - 强调
　　* font - 字体设定(不推荐)
　　* i - 斜体
　　* img - 图片
　　* input - 输入框
　　* kbd - 定义键盘文本
　　* label - 表格标签
　　* q - 短引用
　　* s - 中划线(不推荐)
　　* samp - 定义范例计算机代码
　　* select - 项目选择
　　* small - 小字体文本
　　* span - 常用内联容器，定义文本内区块
　　* strike - 中划线
　　* strong - 粗体强调
　　* sub - 下标
　　* sup - 上标
　　* textarea - 多行文本输入框
　　* tt - 电传文本
　　* u - 下划线
　　* var - 定义变量

可变元素

　　可变元素为根据上下文语境决定该元素为块元素或者内联元素。
　　* applet - java applet
　　* button - 按钮
　　* del - 删除文本
　　* iframe - inline frame
　　* ins - 插入的文本
　　* map - 图片区块(map)
　　* object - object对象
　　* script - 客户端脚本"
},

"Q":"页面导入样式时，使用link和@import有什么区别？",
"A":"1.老祖宗的差别。link属于XHTML标签，而@import完全是CSS提供的一种方式。link标签除了可以加载CSS外，还可以做很多其它的事情，比如定义RSS，定义rel连接属性等，@import就只能加载CSS了。2.加载顺序的差别。当一个页面被加载的时候（就是被浏览者浏览的时候），link引用的CSS会同时被加载，而@import引用的CSS 会等到页面全部被下载完再被加载。所以有时候浏览@import加载CSS的页面时开始会没有样式（就是闪烁），网速慢的时候还挺明显（梦之都加载CSS 的方式就是使用@import，一边下载一边浏览梦之都网页时，就会出现上述问题）。3.兼容性的差别。由于@import是CSS2.1提出的所以老的浏览器不支持，@import只有在IE5以上的才能识别，而link标签无此问题。4.使用dom控制样式时的差别。当使用javascript控制dom去改变样式的时候，只能使用link标签，因为@import不是dom可以控制的。"


"Q":"介绍一下你对浏览器内核的理解？",
"A":"主要分成两部分：渲染引擎(layout engineer或 Rendering Engine) 和 JS 引擎。

    渲染引擎：负责取得网页的内容（HTML、 XML 、图像等等）、整理讯息（例如加入 CSS 等），以及计算网页的显示方式，然后会输出至显示器或打印机。浏览器的内核的不同对于网页的语法解释会有不同，所以渲染的效果也不相同。所有网页浏览器、电子邮件客户端以及其它需要编辑、显示网络内容的应用程序都需要内核。
    
    JS引擎则：解析和执行 javascript 来实现网页的动态效果。
    
    最开始渲染引擎和JS引擎并没有区分的很明确，后来 JS 引擎越来越独立，内核就倾向于只指渲染引擎"

"Q":"主流内核",
"A":"1、Trident内核：代表作品是IE，因IE捆绑在Windows中，所以占有极高的份额，又称为IE内核或MSHTML，此内核只能用于Windows平台，且不是开源的。

        代表作品还有腾讯、Maxthon（遨游）、360浏览器等。但由于市场份额比较大，曾经出现脱离了W3C标准的时候，同时IE版本比较多，
    
        存在很多的兼容性问题。
    
    2、Gecko内核：代表作品是Firefox，即火狐浏览器。因火狐是最多的用户，故常被称为firefox内核它是开源的，最大优势是跨平台，在Microsoft Windows、Linux、MacOs X等主   要操作系统中使用。
    
       Mozilla是网景公司在第一次浏览器大战败给微软之后创建的。有兴趣的同学可以了解一下浏览器大战
    
    3、Webkit内核：代表作品是Safari、曾经的Chrome，是开源的项目。
    
    4、Presto内核：代表作品是Opera，Presto是由Opera Software开发的浏览器排版引擎，它是世界公认最快的渲染速度的引擎。在13年之后，Opera宣布加入谷歌阵营，弃用了    Presto
    
    5、Blink内核：由Google和Opera Software开发的浏览器排版引擎，2013年4月发布。现在Chrome内核是Blink。谷歌还开发了自己的JS引擎，V8，使JS运行速度极大地提高了
  




"q":html5有哪些新特性、移除了那些元素？如何处理HTML5新标签的浏览器兼容问题？如何区分 HTML 和 HTML5？
"A":*HTML5 现在已经不是SGML 的子集，主要是关于图像，位置，存储，多任务等功能的增加。

*绘画canvas 

  用于媒介回放的video 和audio 元素

  本地离线存储localStorage 长期存储数据，浏览器关闭后数据不丢失；

  sessionStorage 的数据在浏览器关闭后自动删除

 

  语意化更好的内容元素，比如article、footer、header、nav、section

  表单控件，calendar、date、time、email、url、search 

  新的技术webworker,websockt, Geolocation

 

*移除的元素

 

纯表现的元素：basefont，big，center，font,s，strike，tt，u；

 

对可用性产生负面影响的元素：frame，frameset，noframes；

 

*IE8/IE7/IE6支持通过document.createElement方法产生的标签，

可以利用这一特性让这些浏览器支持HTML5新标签，

 

  浏览器支持新标签后，还需要添加标签默认的样式：

 

*当然最好的方式是直接使用成熟的框架、使用最多的是html5shim框架

   <!--[if lt IE 9]>

   <script>src="http://html5shim.googlecode.com/svn/trunk/html5.js"</script>

   <![endif]-->

"q":简述一下你对HTML语义化的理解？
"a":1、简述一下你对HTML语义化的理解？

用正确的标签做正确的事情。
html语义化让页面的内容结构化，结构更清晰，便于对浏览器、搜索引擎解析;
即使在没有样式CSS情况下也以一种文档格式显示，并且是容易阅读的;
搜索引擎的爬虫也依赖于HTML标记来确定上下文和各个关键字的权重，利于seo;
使阅读源代码的人对网站更容易将网站分块，便于阅读维护理解。
2、你对浏览器内核的理解？

主要分成两部分：渲染引擎(layout engineer或Rendering Engine)和js引擎。

　　渲染引擎：负责取得网页的内容（HTML、XML、图像等等）、整理讯息（例如加入CSS等），以及计算网页的显示方式，然后会输出至显示器或打印机。

　　浏览器的内核的不同对于网页的语法解释会有不同，所以渲染的效果也不相同。所有网页浏览器、电子邮件客户端以及其它需要编辑、显示网络内容的应用程序都需要内核。

　　JS引擎则：解析和执行javascript来实现网页的动态效果。

　　最开始渲染引擎和JS引擎并没有区分的很明确，后来JS引擎越来越独立，内核就倾向于只指渲染引擎。

3、HTML5 为什么只需要写 <!DOCTYPE HTML>？

<!DOCTYPE>告知浏览器的解析器用什么文档标准解析这个文档。DOCTYPE不存在或格式不正确会导致文档以兼容模式呈现。

HTML5不基于 SGML，因此不需要对DTD进行引用，但是需要doctype来规范浏览器的行为（让浏览器按照它们应该的方式来运行）。

而HTML4.01基于SGML,所以需要对DTD进行引用，才能告知浏览器文档所使用的文档类型。

4、你有哪些性能优化的方法？
　　（1） 减少http请求次数：CSS Sprites, JS、CSS源码压缩、图片大小控制合适；网页Gzip，CDN托管，data缓存 ，图片服务器。

　　（2） 前端模板 JS+数据，减少由于HTML标签导致的带宽浪费，前端用变量保存ajax请求结果，每次操作本地变量，不用请求，减少请求次数

　　（3） 用innerHTML代替DOM操作，减少DOM操作次数，优化javascript性能。

　　（4） 当需要设置的样式很多时设置className而不是直接操作style。

　　（5） 少用全局变量、缓存DOM节点查找的结果。减少IO读取操作。

　　（6） 避免使用CSS Expression（css表达式)又称Dynamic properties(动态属性)。

　　（7） 图片预加载，将样式表放在顶部，将脚本放在底部 加上时间戳。

5、哪些常见操作会造成内存泄漏？

　　内存泄漏指任何对象在您不再拥有或需要它之后仍然存在。

　　垃圾回收器定期扫描对象，并计算引用了每个对象的其他对象的数量。如果一个对象的引用数量为 0（没有其他对象引用过该对象），或对该对象的惟一引用是循环的，那么该对象的内存即可回收。

　　setTimeout 的第一个参数使用字符串而非函数的话，会引发内存泄漏。

　　闭包、控制台日志、循环（在两个对象彼此引用且彼此保留时，就会产生一个循环）。

6、在网页中的应该使用奇数还是偶数的字体？为什么呢？
偶数字号相对更容易和 web 设计的其他部分构成比例关系。比如：当我用了 14 px 的正文字号，我可能会在一些地方用 14 × 0.5 = 7 px 的 margin，在另一些地方用 14 × 1.5 = 21 px 的标题字号。
Windows 自带的点阵宋体（中易宋体）从 Vista 开始只提供 12、14、16 px 这三个大小的点阵，而 13、15、17 px 时用的是小一号的点阵（即每个字占的空间大了 1 px，但点阵没变），于是略显稀疏。
 7、原型是什么？原型链是什么？

原型是什么？
在JavaScript中原型是一个prototype对象，用于表示类型之间的关系。

原型链是什么？
JavaScript万物都是对象，对象和对象之间也有关系，并不是孤立存在的。对象之间的继承关系，在JavaScript中是通过prototype对象指向父类对象，直到指向Object对象为止，这样就形成了一个原型指向的链条，专业术语称之为原型链。

Object的原型对象是什么？？？

函数的原型对象constructor默认指向函数本身，原型对象除了有原型属性外，为了实现继承，还有一个原型链指针_proto_，该指针指向上一层的原型对象，而上一层的原型对象的结构依然类似，这样利用_proto_一直指向Object的原型对象上，而Object的原型对象用Object.prototype._proto_ = null表示原型链的最顶端，如此变形成了javascript的原型链继承，同时也解释了为什么所有的javascript对象都具有Object的基本方法。

 

怎么判断一个属性是对象上的属性还是其原型对象上的属性？

obj.hasOwnProperty(attribute)；

8、判断一个对象类型为数组

因为无论是数组还是对象，对于typeof的操作返回值都为object，所以不能用typeOf();

1、通过instanceof来判断区分              console.log(arr instanceof Array); //true

2、通过constructor             console.log(arr.constructor === Array);

3、通过toString()方法，数组原型和对象原型定义的toString()方法不同                    console.log(Object.prototype.toString.call(arr) === '[object Array]'); //true

 

9、谈谈你对模块化开发的理解？

 

什么是模块化

 

所谓的模块化开发就是封装细节，提供使用接口，彼此之间互不影响，每个模块都是实现某一特定的功能。模块化开发的基础就是函数 

（一）使用函数封装 

function func1(){  
　　　　//...  
}  
function func2(){  
　　　　//...  
}  
上面的函数func1 ()和func2 ()，组成一个模块。使用的时候，直接调用就行了。这种做法的缺点很明显："污染"了全局变量，无法保证不与其他模块发生变量名冲突，而且模块成员之间看不出直接关系。 

（二）使用对象封装 

为了解决上面的缺点，可以把模块写成一个对象，所有的模块成员都放到这个对象里面。 

varobj = {  
    age : 0,  
    func1 : function (){  
        //...  
    },  
    func2 : function (){  
        //...  
    }  
};  
上面的函数func1 ()和func2 (），都封装在obj对象里。使用的时候，就是调用这个对象的属性。

　obj.func1();

这样做也是有问题的，变量可以被外面随意改变而导致不安全。比如，年龄被修成负数。

 

 obj.age = -100;

（三）立即执行函数写法 

使用"立即执行函数"（Immediately-Invoked FunctionExpression，IIFE），可以达到不暴露私有成员的目的。这个也是闭包处理的一种方式。

var oj= (function(){  
　　　　var _age= 0;  
　　　　var func1= function(){  
　　　　　　//...  
　　　　};  
　　　　var func2= function(){  
　　　　　　//...  
　　　　};  
　　　　return {  
　　　　　　m1 : func1,  
　　　　　　m2 : func2  
　　　　};  
})();  
使用上面的写法，外部代码无法读取内部的age变量。



"q":HTML5的离线储存怎么使用，工作原理能不能解释一下？
"a":在用户没有因特网链接时，可以正常访问站点或应用，在用户与因特网连接时，更新用户机器上的缓存文件.

原理：HTML5的离线储存是基于一个新建的 .appcache文件的缓存机制（不是缓存技术），通过这个文件上的解析清单离线存储资源，这些资源就会像cookie一样被存储下来。之后网络在处于离线状态下时，浏览器会通过被离线存储的数据进行页面展示。

如何使用：

1、页面头部像下面一样加入一个manifest的属性；

2、在cache.manifest文件的编写离线存储的资源；

CACHE MANIFEST

#v0.11

CACHE:

js/app.js

css/style.css

NETWORK:

resourse/logo.png

FALLBACK:

/ /offline.html

3、在离线状态时，操作window.applicationCache进行需求实现。


"q":浏览器是怎么对HTML5的离线储存资源进行管理和加载的呢？
"a":在线的情况下，浏览器发现html头部有manifest属性，它会请求manifest文件，如果是第一次访问app，那么浏览器就会根据manifest文件的内容下载相应的资源并且进行离线存储。如果已经访问过app并且资源已经离线存储了，那么浏览器就会使用离线的资源加载页面，然后浏览器会对比新的manifest文件与旧的manifest文件，如果文件没有发生改变，就不做任何操作，如果文件改变了，那么就会重新下载文件中的资源并进行离线存储。
离线的情况下，浏览器就直接使用离线存储的资源。

"q":请描述一下 cookies，sessionStorage 和 localStorage 的区别？
"a":sessionStorage 、localStorage 和 cookie 之间的区别
共同点：都是保存在浏览器端，且同源的。

区别：cookie数据始终在同源的http请求中携带（即使不需要），即cookie在浏览器和服务器间来回传递；cookie数据还有路径（path）的概念，可以限制cookie只属于某个路径下。存储大小限制也不同，cookie数据不能超过4k，同时因为每次http请求都会携带cookie，所以cookie只适合保存很小的数据，如会话标识。

而sessionStorage和localStorage不会自动把数据发给服务器，仅在本地保存。sessionStorage和localStorage 虽然也有存储大小的限制，但比cookie大得多，可以达到5M或更大。

数据有效期不同，sessionStorage：仅在当前浏览器窗口关闭前有效，自然也就不可能持久保持；localStorage：始终有效，窗口或浏览器关闭也一直保存，因此用作持久数据；cookie只在设置的cookie过期时间之前一直有效，即使窗口或浏览器关闭。

作用域不同，sessionStorage不在不同的浏览器窗口中共享，即使是同一个页面；localStorage 在所有同源窗口中都是共享的；cookie也是在所有同源窗口中都是共享的。Web Storage 支持事件通知机制，可以将数据更新的通知发送给监听者。Web Storage 的 api 接口使用更方便。

"q":iframe有那些缺点？
"a":1.程序调入静态页面比较方便;
2.页面和程序分离;
缺点：
1.iframe有不好之处：样式/脚本需要额外链入，会增加请求。
另外用js防盗链只防得了小偷，防不了大盗。
2.iframe好在能够把原先的网页全部原封不动显示下来,但是如果用在首页,是搜索引擎最讨厌的.那么你
的网站即使做的在好,也排不到好的名次! 
如果是动态网页，用include还好点！
但是必须要去除他的<html><head><title><body>标签！ 
3.框架结构有时会让人感到迷惑，特别是在多个框架中都出现上下、左右滚动条的时候。这些滚动条除了
会挤占已经特别有限的页面空间外，还会分散访问者的留心力。访问者遇到这种站点往往会立刻转身离开
。他们会想，既然你的主页如此混乱，那么站点的其他部分也许更不值得阅读。
4.链接导航疑问。运用框架结构时，你必须保证正确配置所有的导航链接，如不然，会给访问者带来很大
的麻烦。比如被链接的页面出现在导航框架内，这种情况下访问者便被陷住了，因为此时他没有其他地点
可去。
5.调用外部页面,需要额外调用css,给页面带来额外的请求次数;

二、为什么少用iframe
iframes 提供了一个简单的方式把一个网站的内容嵌入到另一个网站中。但我们需要慎重的使用iframe。iframe的创建比其它包括scripts和css的 DOM 元素的创建慢了 1-2 个数量级。
使用 iframe 的页面一般不会包含太多 iframe，所以创建 DOM 节点所花费的时间不会占很大的比重。但带来一些其它的问题：onload 事件以及连接池(connection pool)。

1.Iframes 阻塞页面加载

及时触发 window 的 onload 事件是非常重要的。onload 事件触发使浏览器的 “忙” 指示器停止，告诉用户当前网页已经加载完毕。当 onload 事件加载延迟后，它给用户的感觉就是这个网页非常慢。

window 的 onload 事件需要在所有 iframe 加载完毕后(包含里面的元素)才会触发。在 Safari 和 Chrome 里，通过 JavaScript 动态设置 iframe 的 SRC 可以避免这种阻塞情况。

2.唯一的连接池

浏览器只能开少量的连接到web服务器。比较老的浏览器，包含 Internet Explorer 6 & 7 和 Firefox 2，只能对一个域名(hostname)同时打开两个连接。这个数量的限制在新版本的浏览器中有所提高。Safari 3+ 和 Opera 9+ 可同时对一个域名打开 4 个连接，Chrome 1+, IE 8 以及 Firefox 3 可以同时打开 6 个。你可以通过这篇文章查看具体的数据表：Roundup on Parallel Connections.

有人可能希望 iframe 会有自己独立的连接池，但不是这样的。绝大部分浏览器，主页面和其中的 iframe 是共享这些连接的。这意味着 iframe 在加载资源时可能用光了所有的可用连接，从而阻塞了主页面资源的加载。如果 iframe 中的内容比主页面的内容更重要，这当然是很好的。但通常情况下，iframe 里的内容是没有主页面的内容重要的。这时 iframe 中用光了可用的连接就是不值得的了。一种解决办法是，在主页面上重要的元素加载完毕后，再动态设置 iframe 的 SRC。

美国前 10 大网站都使用了 iframe。大部分情况下，他们用它来加载广告。这是可以理解的，也是一种符合逻辑的解决方案，用一种简单的办法来加载广告服务。但请记住，iframe 会给你的页面性能带来冲击。只要可能，不要使用 iframe。当确实需要时，谨慎的使用他们。

三、iframe和frame的区别

1、frame不能脱离frameSet单独使用，iframe可以；
2、frame不能放在body中；

  如下可以正常显示：

<!--<body>-->
<frameset rows="50%,*">
   <frame   name="frame1"   src="http://gongxquan.blog.163.com/test1.htm"/>  
   <frame   name="frame2"   src="http://gongxquan.blog.163.com/test2.htm"/>  
</frameset> 
<!--<body>-->
  
  如下不能正常显示：
<body>
<frameset rows="50%,*">
   <frame   name="frame1"   src="http://gongxquan.blog.163.com/test1.htm"/>  
   <frame   name="frame2"   src="http://gongxquan.blog.163.com/test2.htm"/>  
</frameset> 
<body>



3、嵌套在frameSet中的iframe必需放在body中；
  如下可以正常显示：
  <body>
     <frameset>  
       <iframe   name="frame1"   src="http://gongxquan.blog.163.com/test1.htm"/>  
       <iframe   name="frame2"   src="http://gongxquan.blog.163.com/test2.htm"/>  
     </frameset>  
   </body>

  如下不能正常显示：

 <!--<body>-->
     <frameset>  
       <iframe   name="frame1"   src="http://gongxquan.blog.163.com/test1.htm"/>  
       <iframe   name="frame2"   src="http://gongxquan.blog.163.com/test2.htm"/>  
     </frameset>  
   <!--</body>-->


4、不嵌套在frameSet中的iframe可以随意使用；
     如下均可以正常显示：

<body>
   <iframe   name="frame1"   src="http://gongxquan.blog.163.com/test1.htm"/>  
   <iframe   name="frame2"   src="http://gongxquan.blog.163.com/test2.htm"/>  
</body>


<!--<body>-->
   <iframe   name="frame1"   src="http://gongxquan.blog.163.com/test1.htm"/>  
   <iframe   name="frame2"   src="http://gongxquan.blog.163.com/test2.htm"/>  
<!--</body>-->
5、frame的高度只能通过frameSet控制；iframe可以自己控制，不能通过frameSet控制，如：

<!--<body>-->
<frameset rows="50%,*">
   <frame   name="frame1"   src="http://gongxquan.blog.163.com/test1.htm"/>  
   <frame   name="frame2"   src="http://gongxquan.blog.163.com/test2.htm"/>  
</frameset> 
<!--</body>-->

<body>
<frameset>
   <iframe height="30%"  name="frame1"   src="http://gongxquan.blog.163.com/test1.htm"/>  
   <iframe height="100"  name="frame2"   src="http://gongxquan.blog.163.com/test2.htm"/>  
</frameset> 
</body>
6、如果在同一个页面使用了两个以上的iframe，在IE中可以正常显示，在firefox中只能显示出第一个；使用两个以上的frame在IE和firefox中均可正常

"q":Label的作用是什么？是怎么用的？（加 for 或 包裹）
"a":扩大checkbox的选择范围

"q":HTML5的form如何关闭自动完成功能？
"a":
"q":如何实现浏览器内多个标签页之间的通信? (阿里)
"a":1.使用localStorage

    2.使用cookie+setInterval
"q":webSocket如何兼容低浏览器？(阿里)
"a":对于低端不支持websocket的浏览器，一般有几个解决方案

使用轮询或长连接的方式实现伪websocket的通信

使用flash或其他方法实现一个websocket客户端 ：https://segmentfault.com/q/1010000005000671/a-1020000005003936

https://blog.csdn.net/u011925826/article/details/17532465
Adobe Flash Socket 、 ActiveX HTMLFile (IE) 、 基于 multipart 编码发送 XHR 、 基于长轮询的 XHR

"q":页面可见性（Page Visibility API） 可以有哪些用途？
"a:"document.addEventListener('visibilitychange',function () {
        if(document.hidden){
            t.innerText='come back';
        }else {
            t.innerText='tuboemily';
        }
    })


"q":实现不使用 border 画出1px高的线，在不同浏览器的Quirksmode和CSSCompat模式下都能保持同一效果。
"a":<div style="height:1px;overflow:hidden;background:red"></div> (当然svg,canvas一样能胜任)
网页验证码是干嘛的，是为了解决什么安全问题？

"q":title与h1的区别、b与strong的区别、i与em的区别？
"a":title属性没有明确意义只表示是个标题， H1 则表示层次明确的标题，对页面信息的抓取也有很大的影响；
strong是标明重点内容，有语气加强的含义，使用阅读设备阅读网络时：
b会重读，而 是展示强调内容。
i内容展示为斜体
em 表示强调的文本；
CSS
"q":介绍一下标准的CSS的盒子模型？低版本IE的盒子模型有什么不同的？
"a":CSS盒子模型：由四个属性组成的外边距(margin)、内边距(padding)、边界(border)、内容区(width和height);

标准的CSS盒子模型和低端IE CSS盒子模型不同：宽高不一样

标准的css盒子模型宽高就是内容区宽高；
低端IE css盒子模型宽高 内边距﹢边界﹢内容区；

"q":CSS选择符有哪些？哪些属性可以继承？
"a":类型选择符（body）、群组选择符（h1，h2，h3，span）、包含选择符（h2 span）、ID选择符（#id）、Class选择符（.content）
    !important > 行内样式>ID选择器 > 类选择器 > 标签 > 通配符 > 继承 > 浏览器默认属性
    可继承的样式：
1)      font-size

2)      font-family

3)      color

4)      text-indent

不可继承的样式：
1)      border

2)      padding

3)      margin

4)      width

5)      height
"q":CSS优先级算法如何计算？
"a":当遇到多个选择符同时出现时候 
按选择符得到的Specificity值逐位相加， 
{数位之间没有进制 比如说： 0,0,0,5 + 0,0,0,5 =0,0,0,10 而不是 0,0, 1, 0} 
就得到最终计算得的specificity， 
然后在比较取舍时按照从左到右的顺序逐位比较。 

实例分析： 

1.div { font-size:12px;} 
分析： 
1个元素{ div}，Specificity值为0,0,0,1 

2.body div p{color: green;} 
分析： 
3个元素{ body div p }，Specificity值为0,0,0,3 

3.div .sjweb{ font-size:12px;} 
分析： 
1个元素{ div }，Specificity值为0,0,0,1 
1个类选择符{.sjweb}，Specificity值为0,0,1, 0 
最终：Specificity值为 0,0,1,1 

4.Div # sjweb { font-size:12px;} 
分析： 
1个元素{ div }，Specificity值为0,0,0,1 
1个类选择符{.sjweb}，Specificity值为0,1,0, 0 
最终：Specificity值为 0,1,0,1 


5.html > body div [id=”totals”] ul li > p {color:red;} 
分析： 
6个元素{ html body div ul li p} Specificity值为0,0,0,6 
1个属性选择符{ [id=”totals”] } Specificity值为0,0,1,0 
2个其他选择符{ > > } Specificity值为0,0,0,0 
最终：Specificity值为 0,0,1,6

"q":CSS3新增伪类有那些？
"a":1)      p:first-of-type  选择属于其父元素的首个 <p> 元素的每个 <p> 元素。

2)      p:last-of-type   选择属于其父元素的最后 <p> 元素的每个 <p> 元素。

3)      p:only-of-type  选择属于其父元素唯一的 <p> 元素的每个 <p> 元素。

4)      p:only-child     选择属于其父元素的唯一子元素的每个 <p> 元素。

5)      p:nth-child(2)  选择属于其父元素的第二个子元素的每个 <p> 元素。

6)      :enabled :disabled 控制表单控件的禁用状态。

7)      :checked         单选框或复选框被选中。

"Q":如何居中div？如何居中一个浮动元素？如何让绝对定位的div居中？
"a": 1：margin:0px auto
     2：父元素relative, 子代元素 absolute，
     3：transform为宽度的一半(-margin)
     4:https://blog.csdn.net/lxcao/article/details/52670724?utm_source=blogxgwz2
"q":display有哪些值？说明他们的作用。
"a":none：此元素不显示。 
block：将元素显示为块级元素，前后会带换行符。 
inline:默认值，元素会被显示为内联元素，前后没有换行符。 
inline-block:行内块级元素。
none|inline|block|inline-block|list-item|run-in|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|inherit

"q":position的值relative和absolute定位原点是？
"a":relative（相对定位）：定位原点是元素本身所在位置； 
absolute（绝对定位）：定位原点是离自己这一级元素最近的一级position设置为absolute或者relative的父元素的左上角为原点的
CSS3有哪些新特性？

"q":请解释一下CSS3的Flexbox（弹性盒布局模型）,以及适用场景？
"a":flex-direction属性决定主轴的方向（即项目的排列方向）。 
flex-wrap属性定义，如果一条轴线排不下，如何换行。默认情况下，项目都排在一条线（又称”轴线”）上。 
flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap 
justify-content属性定义了项目在主轴上的对齐方式。 
align-items属性定义项目在交叉轴上如何对齐。 
align-content属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。 
4.项目属性 
order属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。 
flex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。 
flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小 
flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。 
flex属性是以上三个的简写，默认值为0 1 auto。后两个属性可选。该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)。建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。 
align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch 
--------------------- 

“q”：用纯CSS创建一个三角形的原理是什么？
"a":使用伪选择器
    首先，需要把元素的宽度、高度设为0。然后设置边框样式。

width: 0;
height: 0;
border-top: 40px solid transparent;
border-left: 40px solid transparent;
border-right: 40px solid transparent;
border-bottom: 40px solid #ff0000;

"q":css多列等高如何实现？
"a":1)无限的Padding-bottom还有负的margin-bottom并设置overflow:hiden把溢出背景切掉

"q":一个满屏 品 字布局 如何设计?
"a":块高宽是确定的；
上面那块用margin: 0 auto;居中；
下面两块用float或者inline-block不换行；
用margin调整位置使他们居中。

"q":经常遇到的浏览器的兼容性有哪些？原因，解决方法是什么，常用hack的技巧 ？
"a":

"q":li与li之间有看不见的空白间隔是什么原因引起的？有什么解决办法？
"a":方法一：既然是因为<li>换行导致的，那就可以将<li>代码全部写在一排，如下

<div class="wrap">
<h3>li标签空白测试</h3>
<ul>
<li class="part1"></li><li class="part2"></li><li class="part3"></li><li class="part4"></li>
</ul>
</div>
1
2
3
4
5
6
再刷新页面看就没有空白了，就是这么神奇~

方法二：我们为了代码美观以及方便修改，很多时候我们不可能将<li>全部写在一排，那怎么办？既然是空格占一个字符的宽度，那我们索性就将<ul>内的字符尺寸直接设为0，将下面样式放入样式表，问题解决。

.wrap ul{font-size:0px;}
1
但随着而来的就是<ul>中的其他文字就不见了，因为其尺寸被设为0px了，我们只好将他们重新设定字符尺寸。

方法三：本来以为方法二能够完全解决问题，但经测试，将li父级标签字符设置为0在Safari浏览器依然出现间隔空白；既然设置字符大小为0不行，那咱就将间隔消除了，将下面代码替换方法二的代码，目前测试完美解决。同样随来而来的问题是li内的字符间隔也被设置了，我们需要将li内的字符间隔设为默认。

.wrap ul{letter-spacing: -5px;}
1
之后记得设置li内字符间隔

.wrap ul li{letter-spacing: normal;}

"q":为什么要初始化CSS样式?
"a":

"q":absolute的containing block计算方式跟正常流有什么不同？
"a":无论属于哪种，都要先找到其祖先元素中最近的 position 值不为 static 的元素，然后再判断：

若此元素为 inline 元素，则 containing block 为能够包含这个元素生成的第一个和最后一个 inline box 的 padding box (除 margin, border 外的区域) 的最小矩形；
否则,则由这个祖先元素的 padding box 构成。
如果都找不到，则为 initial containing block。

补充：

static(默认的)/relative：简单说就是它的父元素的内容框（即去掉padding的部分）
absolute: 向上找最近的定位为absolute/relative的元素
fixed: 它的containing block一律为根元素(html/body)

"q":CSS里的visibility属性有个collapse属性值是干嘛用的？在不同浏览器下以后什么区别？
"a":其实visibility可以有第三种值，就是collapse。当一个元素的visibility属性被设置成collapse值后，对于一般的元素，它的表现跟hidden是一样的。但例外的是，如果这个元素是table相关的元素，例如table行，table group，table列，table column group，它的表现却跟display: none一样，也就是说，它们占用的空间也会释放。
position跟display、margin collapse、overflow、float这些特性相互叠加后会怎么样？
在谷歌浏览器里，使用collapse值和使用hidden值没有什么区别。 (See this bug report and comments)
在火狐浏览器、Opera和IE11里，使用collapse值的效果就如它的字面意思：table的行会消失，它的下面一行会补充它的位置。

"q":对BFC规范(块级格式化上下文：block formatting context)的理解？
"a":BFC规定了内部的Block Box如何布局。
定位方案：

内部的Box会在垂直方向上一个接一个放置。
Box垂直方向的距离由margin决定，属于同一个BFC的两个相邻Box的margin会发生重叠。
每个元素的margin box 的左边，与包含块border box的左边相接触。
BFC的区域不会与float box重叠。
BFC是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。
计算BFC的高度时，浮动元素也会参与计算。
满足下列条件之一就可触发BFC

根元素，即html
float的值不为none（默认）
overflow的值不为visible（默认）
display的值为inline-block、table-cell、table-caption
position的值为absolute或fixed

"q":CSS权重优先级是如何计算的？
"a":

"q":请解释一下为什么需要清除浮动？清除浮动的方式
"a":动元素碰到包含它的边框或者浮动元素的边框停留。由于浮动元素不在文档流中，所以文档流的块框表现得就像浮动框不存在一样。浮动元素会漂浮在文档流的块框上。
浮动带来的问题：

父元素的高度无法被撑开，影响与父元素同级的元素
与浮动元素同级的非浮动元素（内联元素）会跟随其后
若非第一个元素浮动，则该元素之前的元素也需要浮动，否则会影响页面显示的结构。
清除浮动的方式：

父级div定义height
最后一个浮动元素后加空div标签 并添加样式clear:both。
包含浮动元素的父标签添加样式overflow为hidden或auto。
父级div定义zoom

"q":zoom:1的清楚浮动原理?
"a":重点）当设置了zoom的值之后，所设置的元素就会就会扩大或者缩小，高度宽度就会重新计算了，这里一旦改变zoom值时其实也会发生重新渲染，运用这个原理，也就解决了ie下子元素浮动时候父元素不随着自动扩大的问题。

"q":移动端的布局用过媒体查询吗？
"a":<head>里边
<link rel="stylesheet" type="text/css" href="xxx.css" media="only screen and (max-device-width:480px)">

CSS : @media only screen and (max-device-width:480px) {/css样式/}
使用 CSS 预处理器吗？喜欢那个？

"q":CSS优化、提高性能的方法有哪些？
"a":避免过度约束
避免后代选择符
避免链式选择符
使用紧凑的语法
避免不必要的命名空间
避免不必要的重复
最好使用表示语义的名字。一个好的类名应该是描述他是什么而不是像什么
避免！important，可以选择其他选择器
尽可能的精简规则，你可以合并不同类里的重复规则

"q":浏览器是怎样解析CSS选择器的？
"a":CSS选择器的解析是从右向左解析的。若从左向右的匹配，发现不符合规则，需要进行回溯，会损失很多性能。若从右向左匹配，先找到所有的最右节点，对于每一个节点，向上寻找其父节点直到找到根元素或满足条件的匹配规则，则结束这个分支的遍历。两种匹配规则的性能差别很大，是因为从右向左的匹配在第一步就筛选掉了大量的不符合条件的最右节点（叶子节点），而从左向右的匹配规则的性能都浪费在了失败的查找上面。
而在 CSS 解析完毕后，需要将解析的结果与 DOM Tree 的内容一起进行分析建立一棵 Render Tree，最终用来进行绘图。在建立 Render Tree 时（WebKit 中的「Attachment」过程），浏览器就要为每个 DOM Tree 中的元素根据 CSS 的解析结果（Style Rules）来确定生成怎样的 Render Tree。

"q":在网页中的应该使用奇数还是偶数的字体？为什么呢？
"a":用偶数字体。偶数字号相对更容易和 web 设计的其他部分构成比例关系。Windows 自带的点阵宋体（中易宋体）从 Vista 开始只提供 12、14、16 px 这三个大小的点阵，而 13、15、17 px时用的是小一号的点。（即每个字占的空间大了 1 px，但点阵没变），于是略显稀疏。

"q":margin和padding分别适合什么场景使用？
"a":何时使用margin：

需要在border外侧添加空白
空白处不需要背景色
上下相连的两个盒子之间的空白，需要相互抵消时。
何时使用padding：

需要在border内侧添加空白
空白处需要背景颜色
上下相连的两个盒子的空白，希望为两者之和。
兼容性的问题：在IE5 IE6中，为float的盒子指定margin时，左侧的margin可能会变成两倍的宽度。通过改变padding或者指定盒子的display：inline解决。

抽离样式模块怎么写，说出思路，有无实践经验？[阿里航旅的面试题]

"q":元素竖向的百分比设定是相对于容器的高度吗？
"a":当按百分比设定一个元素的宽度时，它是相对于父容器的宽度计算的，但是，对于一些表示竖向距离的属性，例如 padding-top , padding-bottom , margin-top , margin-bottom 等，当按百分比设定它们时，依据的也是父容器的宽度，而不是高度。

"q":全屏滚动的原理是什么？用到了CSS的那些属性？
"a":原理：有点类似于轮播，整体的元素一直排列下去，假设有5个需要展示的全屏页面，那么高度是500%，只是展示100%，剩下的可以通过transform进行y轴定位，也可以通过margin-top实现
overflow：hidden；transition：all 1000ms ease；

"q":什么是响应式设计？响应式设计的基本原理是什么？如何兼容低版本的IE？
"a":响应式网站设计(Responsive Web design)是一个网站能够兼容多个终端，而不是为每一个终端做一个特定的版本。
基本原理是通过媒体查询检测不同的设备屏幕尺寸做处理。
页面头部必须有meta声明的viewport。

<meta name=’viewport’ content=”width=device-width, initial-scale=1. maximum-scale=1,user-scalable=no”

"q":视差滚动效果，如何给每页做不同的动画？（回到顶部，向下滑动要再次出现，和只出现一次分别怎么做？）
"a":视差滚动（Parallax Scrolling）通过在网页向下滚动的时候，控制背景的移动速度比前景的移动速度慢来创建出令人惊叹的3D效果。

CSS3实现
优点：开发时间短、性能和开发效率比较好，缺点是不能兼容到低版本的浏览器
jQuery实现
通过控制不同层滚动速度，计算每一层的时间，控制滚动效果。
优点：能兼容到各个版本的，效果可控性好
缺点：开发起来对制作者要求高
插件实现方式
例如：parallax-scrolling，兼容性十分好

"q"::before 和 :after中双冒号和单冒号 有什么区别？解释一下这2个伪元素的作用。
"a":单冒号(:)用于CSS3伪类，双冒号(::)用于CSS3伪元素。
::before就是以一个子元素的存在，定义在元素主体内容之前的一个伪元素。并不存在于dom之中，只存在在页面之中。
:before 和 :after 这两个伪元素，是在CSS2.1里新出现的。起初，伪元素的前缀使用的是单冒号语法，但随着Web的进化，在CSS3的规范里，伪元素的语法被修改成使用双冒号，成为::before ::after

如何修改chrome记住密码后自动填充表单的黄色背景 ？

"q":你对line-height是如何理解的？
"a":行高是指一行文字的高度，具体说是两行文字间基线的距离。CSS中起高度作用的是height和line-height，没有定义height属性，最终其表现作用一定是line-height。
单行文本垂直居中：把line-height值设置为height一样大小的值可以实现单行文字的垂直居中，其实也可以把height删除。
多行文本垂直居中：需要设置display属性为inline-block。

设置元素浮动后，该元素的display值是多少？（自动变成display:block）

"q":怎么让Chrome支持小于12px 的文字？
"a":p{font-size:10px;-webkit-transform:scale(0.8);}

让页面里的字体变清晰，变细用CSS怎么做？（-webkit-font-smoothing: antialiased;）

font-style属性可以让它赋值为“oblique” oblique是什么意思？

position:fixed;在android下无效怎么处理？

"q":如果需要手动写动画，你认为最小时间间隔是多久，为什么？（阿里）
"a":多数显示器默认频率是60Hz，即1秒刷新60次，所以理论上最小间隔为1/60＊1000ms ＝ 16.7ms。


"q":display:inline-block 什么时候会显示间隙？(携程)
"a":有空格时候会有间隙 解决：移除空格
margin正值的时候 解决：margin使用负值
使用font-size时候 解决：font-size:0、letter-spacing、word-spacing

"q":overflow: scroll时不能平滑滚动的问题怎么处理？
"a":

"q":有一个高度自适应的div，里面有两个div，一个高度100px，希望另一个填满剩下的高度。
"a":外层div使用position：relative；高度要求自适应的div使用position: absolute; top: 100px; bottom: 0; left: 0
png、jpg、gif 这些图片格式解释一下，分别什么时候用。有没有了解过webp？

"A":什么是Cookie 隔离？（或者说：请求资源的时候不要让它带cookie怎么做）
"q":Cookie隔离问题，同一个网页,多个RemoteWebDriver会共享同一个Cookie。比如想要并行登陆并执 
行操作，这样是不行的。

"q":style标签写在body后与body前有什么区别？
"a":页面加载自上而下 当然是先加载样式。
写在body标签后由于浏览器以逐行方式对HTML文档进行解析，当解析到写在尾部的样式表（外联或写在style标签）会导致浏览器停止之前的渲染，等待加载且解析样式表完成之后重新渲染，在windows的IE下可能会出现FOUC现象（即样式失效导致的页面闪烁问题）

什么是CSS 预处理器 / 后处理器？�

rem布局的优缺点
优点，宽度自适应，可以完美适配不同宽度的屏幕

缺点，高度不固定，如果遇到高度要求很严格的就实现不了
1em = 16px; 

html{

font-size:16px;

}px

html{

font-size:62.5%  // 10/16*100% 也就是设置 是10px

}

其实也就是我们设置页面根元素字体font-size 是多大 1em 就是多大 以上是两个常用标准 比

根据媒体查询，不同屏幕之间用不同的标准


@media only screen and (min-device-width: 320px)and (-webkit-min-device-pixel-ratio: 2) {
   //针对iPhone 4, 5c,5s, 所有iPhone6的放大模式，个别iPhone6的标准模式
html{font-size:10px;}
}
@media only screen and (min-device-width: 375px)and (-webkit-min-device-pixel-ratio: 2) {
　　//针对大多数iPhone6的标准模式
html{font-size:12px;}
}
   
@media only screen and (min-device-width: 375px)and (-webkit-min-device-pixel-ratio: 3) {
　　//针对所有iPhone6+的放大模式
html{font-size:16px;}
   
}
@media only screen and (min-device-width:412px) and (-webkit-min-device-pixel-ratio: 3) {
　　//针对所有iPhone6+的标准模式,414px写为412px是由于三星Nexus 6为412px，可一并处理
html{<font-size:20px;}
}

**基于JS动态计算font-size

(function (doc, win) {
    var docEl = doc.documentElement,
        resizeEvt = 'orientationchange' in window ? 'orientationchange' : 'resize',
        recalc = function () {
            var clientWidth = docEl.clientWidth;<br>window.innerWidth>max ?  window.innerWidth : max;
            if (!clientWidth) return;
            docEl.style.fontSize = 20 * (clientWidth / 320) + 'px';
        };
 
    if (!doc.addEventListener) return;
    win.addEventListener(resizeEvt, recalc, false);
    doc.addEventListener('DOMContentLoaded', recalc, false);
})(document, window);
这个方法就是在监听屏幕的宽度，然后根据不同的屏幕做出反应
orientationchange :检测屏幕发生反转时，就是是横屏还是竖屏时
clientWidth :就是设备的宽度
docEl.style.fontSize = 20 * (clientWidth / 320) + 'px'; :核心就是这句设置根元素的字体大小是clientWidth/320*20


--------------------- 


JavaScript
介绍JavaScript的基本数据类型。

说说写JavaScript的基本规范？

JavaScript原型，原型链 ? 有什么特点？

JavaScript有几种类型的值？（堆：原始数据类型和 栈：引用数据类型），你能画一下他们的内存图吗？

Javascript如何实现继承？

Javascript创建对象的几种方式？

Javascript作用链域?

谈谈this对象的理解。

eval是做什么的？

什么是window对象? 什么是document对象?

null，undefined的区别？

写一个通用的事件侦听器函数(机试题)。

["1", "2", "3"].map(parseInt) 答案是多少？

关于事件，IE与火狐的事件机制有什么区别？ 如何阻止冒泡？

什么是闭包（closure），为什么要用它？

javascript 代码中的"use strict";是什么意思 ? 使用它区别是什么？

如何判断一个对象是否属于某个类？

new操作符具体干了什么呢?

用原生JavaScript的实现过什么功能吗？

Javascript中，有一个函数，执行时对象查找时，永远不会去查找原型，这个函数是？

对JSON的了解？

[].forEach.call($$("*"),function(a){ a.style.outline="1px solid #"+(~~(Math.random()*(1<<24))).toString(16) }) 能解释一下这段代码的意思吗？

js延迟加载的方式有哪些？

Ajax 是什么? 如何创建一个Ajax？

同步和异步的区别?

如何解决跨域问题?

页面编码和被请求的资源编码如果不一致如何处理？

服务器代理转发时，该如何处理cookie？

模块化开发怎么做？

AMD（Modules/Asynchronous-Definition）、CMD（Common Module Definition）规范区别？

requireJS的核心原理是什么？（如何动态加载的？如何避免多次加载的？如何 缓存的？）

JS模块加载器的轮子怎么造，也就是如何实现一个模块加载器？

谈一谈你对ECMAScript6的了解？

ECMAScript6 怎么写class，为什么会出现class这种东西?

异步加载的方式有哪些？

documen.write和 innerHTML的区别?

DOM操作——怎样添加、移除、移动、复制、创建和查找节点?

.call() 和 .apply() 的作用和区别？

数组和对象有哪些原生方法，列举一下？

JS 怎么实现一个类。怎么实例化这个类

JavaScript中的作用域与变量声明提升？

如何编写高性能的Javascript？

那些操作会造成内存泄漏？

JQuery的源码看过吗？能不能简单概况一下它的实现原理？

jQuery.fn的init方法返回的this指的是什么对象？为什么要返回this？

jquery中如何将数组转化为json字符串，然后再转化回来？

jQuery 的属性拷贝(extend)的实现原理是什么，如何实现深拷贝？

jquery.extend 与 jquery.fn.extend的区别？

jQuery 的队列是如何实现的？队列可以用在哪些地方？

谈一下Jquery中的bind(),live(),delegate(),on()的区别？

JQuery一个对象可以同时绑定多个事件，这是如何实现的？

是否知道自定义事件。jQuery里的fire函数是什么意思，什么时候用？

jQuery 是通过哪个方法和 Sizzle 选择器结合的？（jQuery.fn.find()进入Sizzle）

针对 jQuery性能的优化方法？

Jquery与jQuery UI有啥区别？

JQuery的源码看过吗？能不能简单说一下它的实现原理？

jquery 中如何将数组转化为json字符串，然后再转化回来？

jQuery和Zepto的区别？各自的使用场景？

针对 jQuery 的优化方法？

Zepto的点透问题如何解决？

jQueryUI如何自定义组件?

需求：实现一个页面操作不会整页刷新的网站，并且能在浏览器前进、后退时正确响应。给出你的技术实现方案？

如何判断当前脚本运行在浏览器还是node环境中？（阿里）

移动端最小触控区域是多大？

jQuery 的 slideUp动画 ，如果目标元素是被外部事件驱动, 当鼠标快速地连续触发外部元素事件, 动画会滞后的反复执行，该如何处理呢?

把 Script 标签 放在页面的最底部的body封闭之前 和封闭之后有什么区别？浏览器会如何解析它们？

移动端的点击事件的有延迟，时间是多久，为什么会有？ 怎么解决这个延时？（click 有 300ms 延迟,为了实现safari的双击事件的设计，浏览器要知道你是不是要双击操作。）

知道各种JS框架(Angular, Backbone, Ember, React, Meteor, Knockout...)么? 能讲出他们各自的优点和缺点么?

Underscore 对哪些 JS 原生对象进行了扩展以及提供了哪些好用的函数方法？

解释JavaScript中的作用域与变量声明提升？

那些操作会造成内存泄漏？

JQuery一个对象可以同时绑定多个事件，这是如何实现的？

Node.js的适用场景？

(如果会用node)知道route, middleware, cluster, nodemon, pm2, server-side rendering么?

解释一下 Backbone 的 MVC 实现方式？

什么是“前端路由”?什么时候适合使用“前端路由”? “前端路由”有哪些优点和缺点?

知道什么是webkit么? 知道怎么用浏览器的各种工具来调试和debug代码么?

如何测试前端代码么? 知道BDD, TDD, Unit Test么? 知道怎么测试你的前端工程么(mocha, sinon, jasmin, qUnit..)?

前端templating(Mustache, underscore, handlebars)是干嘛的, 怎么用?

简述一下 Handlebars 的基本用法？

简述一下 Handlerbars 的对模板的基本处理流程， 如何编译的？如何缓存的？

用js实现千位分隔符?(来源：前端农民工，提示：正则+replace)

检测浏览器版本版本有哪些方式？

What is a Polyfill?

做的项目中，有没有用过或自己实现一些 polyfill 方案（兼容性处理方案）？

我们给一个dom同时绑定两个点击事件，一个用捕获，一个用冒泡。会执行几次事件，会先执行冒泡还是捕获？

使用JS实现获取文件扩展名？

Webpack热更新实现原理?

请介绍一下JS之事件节流？

什么是JS的函数防抖？

ECMAScript6 相关
Object.is() 与原来的比较操作符“ ===”、“ ==”的区别？

ES6是如何实现编译成ES5的？

css-loader的原理？

前端框架
React 使用场景？

描述一下React 生命周期

实现组件有哪些方式？

应该在React生命周期的什么阶段发出ajax请求，为什么？

shouldComponentUpdate函数有什么作用？

当组件的setState函数被调用之后，发生了什么？

为什么循环产生的组件中要利用上key这个特殊的prop？

React-router 路由的实现原理？

说说React Native,Weex框架的实现原理？

受控组件(Controlled Component)与非受控组件(Uncontrolled Component)的区别

refs 是什么?

React为什么自己定义一套事件体系呢，与浏览器原生事件体系有什么关系？

什么时候应该选择用class实现一个组件，什么时候用一个函数实现一个组件？

什么是HoC（Higher-Order Component）？适用于什么场景？

并不是父子关系的组件，如何实现相互的数据通信？

用过 React 技术栈中哪些数据流管理库？

Redux是如何做到可预测呢？

Redux将React组件划分为哪两种？

Redux是如何将state注入到React组件上的？

请描述一次完整的 Redux 数据流

React的批量更新机制 BatchUpdates？

React与Vue，各自的组件更新进行对比，它们有哪些区别？

其他问题
原来公司工作流程是怎么样的，如何与其他人协作的？如何跨部门合作的？

你遇到过比较难的技术问题是？你是如何解决的？

设计模式 知道什么是singleton, factory, strategy, decrator么?

常使用的库有哪些？常用的前端开发工具？开发过什么应用或组件？

页面重构怎么操作？

列举IE与其他浏览器不一样的特性？

99%的网站都需要被重构是那本书上写的？

什么叫优雅降级和渐进增强？

是否了解公钥加密和私钥加密。

WEB应用从服务器主动推送Data到客户端有那些方式？

对Node的优点和缺点提出了自己的看法？

你有用过哪些前端性能优化的方法？

http状态码有那些？分别代表是什么意思？

一个页面从输入 URL 到页面加载显示完成，这个过程中都发生了什么？（流程说的越详细越好）

部分地区用户反应网站很卡，请问有哪些可能性的原因，以及解决方法？

从打开app到刷新出内容，整个过程中都发生了什么，如果感觉慢，怎么定位问题，怎么解决?

第一次访问页面中时弹出引导，用户关闭引导，之后再次进入页面时不希望出现引导，如何实现？

除了前端以外还了解什么其它技术么？你最最厉害的技能是什么？

你用的得心应手用的熟练地编辑器&开发环境是什么样子？

对前端界面工程师这个职位是怎么样理解的？它的前景会怎么样？

你怎么看待Web App 、hybrid App、Native App？

你移动端前端开发的理解？（和 Web 前端开发的主要区别是什么？）

产品进行版本升级时，可能发生不兼容性问题，如何提前预防和解决？

你对加班的看法？

平时如何管理你的项目？

说说最近最流行的一些东西吧？常去哪些网站？

如何设计突发大规模并发架构？

说说最近最流行的一些东西吧？常去哪些网站？

是否了解开源的工具 bower、npm、yeoman、grunt、gulp，一个 npm 的包里的 package.json 具备的必要的字段都有哪些？（名称、版本号，依赖）

每个模块的代码结构都应该比较简单，且每个模块之间的关系也应该非常清晰，随着功能和迭代次数越来越多，你会如何去保持这个状态的？

Git知道branch, diff, merge么?

如何设计突发大规模并发架构？

当团队人手不足，把功能代码写完已经需要加班的情况下，你会做前端代码的测试吗？

说说最近最流行的一些东西吧？平时常去哪些网站？

知道什么是SEO并且怎么优化么? 知道各种meta data的含义么?

移动端（Android IOS）怎么做好用户体验?

简单描述一下你做过的移动APP项目研发流程？

你在现在的团队处于什么样的角色，起到了什么明显的作用？

你认为怎样才是全端工程师（Full Stack developer）？

介绍一个你最得意的作品吧？

你有自己的技术博客吗，用了哪些技术？

对前端安全有什么看法？

是否了解Web注入攻击，说下原理，最常见的两种攻击（XSS 和 CSRF）了解到什么程度？

项目中遇到国哪些印象深刻的技术难题，具体是什么问题，怎么解决？。

最近在学什么东西？

你的优点是什么？缺点是什么？

如何管理前端团队?

最近在学什么？能谈谈你未来3，5年给自己的规划吗？

有趣的问题
.A、B两人分别在两座岛上。B生病了，A有B所需要的药。C有一艘小船和一个可以上锁的箱子。C愿意在A和B之间运东西，但东西只能放在箱子里。只要箱子没被上锁，C都会偷走箱子里的东西，不管箱子里有什么。如果A和B各自有一把锁和只能开自己那把锁的钥匙，A应该如何把东西安全递交给B？

  答案：A把药放进箱子，用自己的锁把箱子锁上。B拿到箱子后，再在箱子上加一把自己的锁。
  箱子运回A后，A取下自己的锁。箱子再运到B手中时，B取下自己的锁，获得药物。
Amazon主页的左上角有一个商品分类浏览的下拉菜单 没有延迟，而且子菜单也不会在不应该的时候消失。它是怎样做到这一点的呢？

   答案是通过探测鼠标移动的方向和轨迹，具体查看Khan Academy工程师 Ben Kamens 写的 jQuery插件

}